{
    "Throw not implemented": {
        "prefix": ["throw"],
        "scope": "cpp",
        "body": "throw std::logic_error(\"Not implemented.\");"
    },
    "Command structure": {
        "prefix": ["command"],
        "scope": "cpp",
        "body": [
            "struct $1",
            "{",
            "  $2",
            "  //! Writes the command to a provided sink buffer.",
            "  //! @param command Command.",
            "  //! @param buffer Sink buffer.",
            "  static void Write(",
            "    const $1& command, SinkStream& buffer);",
            "",
            "//! Reader a command from a provided source buffer.",
            "//! @param command Command.",
            "//! @param buffer Source buffer.",
            "  static void Read(",
            "    $1& command, SourceStream& buffer);",
            "};",
            "",
            "struct $1OK",
            "{",
            "  $3",
            "  //! Writes the command to a provided sink buffer.",
            "  //! @param command Command.",
            "  //! @param buffer Sink buffer.",
            "  static void Write(",
            "    const $1OK& command, SinkStream& buffer);",
            "",
            "  //! Reader a command from a provided source buffer.",
            "  //! @param command Command.",
            "  //! @param buffer Source buffer.",
            "  static void Read(",
            "    $1OK& command, SourceStream& buffer);",
            "};",
            "",
            "struct $1Cancel",
            "{",
            "  $4",
            "  //! Writes the command to a provided sink buffer.",
            "  //! @param command Command.",
            "  //! @param buffer Sink buffer.",
            "  static void Write(",
            "    const $1Cancel& command, SinkStream& buffer);",
            "",
            "  //! Reader a command from a provided source buffer.",
            "  //! @param command Command.",
            "  //! @param buffer Source buffer.",
            "  static void Read(",
            "    $1Cancel& command, SourceStream& buffer);",
            "};"
        ]
    },
    "Command serialization functions": {
        "prefix": "implementation",
        "scope": "cpp",
        "body": [
          "void $1::Write(",
          "  const $1& command, SinkStream& buffer)",
          "{",
          "  $2",
          "}",
          "",
          "void $1::Read(",
          "  $1& command, SourceStream& buffer)",
          "{",
          "  $3",
          "}"
        ]
    }
}