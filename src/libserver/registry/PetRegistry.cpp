//
// Created by xen1i on 27/08/2025.
//


#include "libserver/registry/PetRegistry.hpp"

#include <spdlog/spdlog.h>
#include <yaml-cpp/yaml.h>

namespace server
{

PetRegistry::PetRegistry()
{
  _pets = {
    {90006, 99150, 150},
    {90006, 99151, 151},
    {90006, 99152, 152},
    {90007, 99153, 153},
    {90007, 99154, 154},
    {90007, 99155, 155},
    {90008, 99156, 156},
    {90008, 99157, 157},
    {90008, 99158, 158},
    {90009, 99159, 159},
    {90009, 99160, 160},
    {90009, 99161, 161},
    {90006, 99058, 58},
    {90006, 99059, 59},
    {90006, 99060, 60},
    {90006, 99061, 70},
    {90007, 99062, 61},
    {90007, 99063, 62},
    {90007, 99064, 63},
    {90007, 99065, 71},
    {90008, 99066, 64},
    {90008, 99067, 65},
    {90008, 99068, 66},
    {90008, 99069, 72},
    {90009, 99070, 67},
    {90009, 99071, 68},
    {90009, 99072, 69},
    {90009, 99073, 73},
    {90010, 99098, 98},
    {90010, 99099, 99},
    {90010, 99100, 100},
    {90001, 99101, 101},
    {90001, 99102, 102},
    {90001, 99103, 103},
    {90002, 99104, 104},
    {90002, 99105, 105},
    {90002, 99106, 106},
    {90003, 99107, 107},
    {90003, 99108, 108},
    {90003, 99109, 109},
    {90010, 99086, 86},
    {90010, 99087, 87},
    {90010, 99088, 88},
    {90001, 99089, 89},
    {90001, 99090, 90},
    {90001, 99091, 91},
    {90002, 99092, 92},
    {90002, 99093, 93},
    {90002, 99094, 94},
    {90003, 99095, 95},
    {90003, 99096, 96},
    {90003, 99097, 97},
    {90004, 99134, 134},
    {90004, 99135, 135},
    {90004, 99136, 136},
    {90005, 99137, 137},
    {90005, 99138, 138},
    {90005, 99139, 139},
    {90011, 99140, 140},
    {90011, 99141, 141},
    {90011, 99142, 142},
    {90012, 99143, 143},
    {90012, 99144, 144},
    {90012, 99145, 145},
    {90004, 99026, 26},
    {90004, 99027, 27},
    {90004, 99028, 28},
    {90004, 99029, 29},
    {90005, 99030, 30},
    {90005, 99031, 31},
    {90005, 99032, 32},
    {90005, 99033, 33},
    {90011, 99034, 34},
    {90011, 99035, 35},
    {90011, 99036, 36},
    {90011, 99037, 37},
    {90012, 99038, 38},
    {90012, 99039, 39},
    {90012, 99040, 40},
    {90012, 99041, 41},
    {90004, 99110, 110},
    {90004, 99111, 111},
    {90004, 99112, 112},
    {90005, 99113, 113},
    {90005, 99114, 114},
    {90005, 99115, 115},
    {90011, 99116, 116},
    {90011, 99117, 117},
    {90011, 99118, 118},
    {90012, 99119, 119},
    {90012, 99120, 120},
    {90012, 99121, 121},
    {90017, 99162, 162},
    {90017, 99163, 163},
    {90017, 99164, 164},
    {90018, 99165, 165},
    {90018, 99166, 166},
    {90018, 99167, 167},
    {90019, 99168, 168},
    {90019, 99169, 169},
    {90019, 99170, 170},
    {90020, 99171, 171},
    {90020, 99172, 172},
    {90020, 99173, 173},
    {90017, 99174, 174},
    {90017, 99175, 175},
    {90017, 99176, 176},
    {90018, 99177, 177},
    {90018, 99178, 178},
    {90018, 99179, 179},
    {90019, 99180, 180},
    {90019, 99181, 181},
    {90019, 99182, 182},
    {90020, 99183, 183},
    {90020, 99184, 184},
    {90020, 99185, 185},
    {90013, 99042, 42},
    {90013, 99043, 43},
    {90013, 99146, 146},
    {90014, 99044, 44},
    {90014, 99045, 45},
    {90014, 99147, 147},
    {90015, 99046, 46},
    {90015, 99047, 47},
    {90015, 99148, 148},
    {90016, 99048, 48},
    {90016, 99049, 49},
    {90016, 99149, 149},
    {90013, 99074, 74},
    {90013, 99075, 75},
    {90013, 99076, 76},
    {90014, 99077, 77},
    {90014, 99078, 78},
    {90014, 99079, 79},
    {90015, 99080, 80},
    {90015, 99081, 81},
    {90015, 99082, 82},
    {90016, 99083, 83},
    {90016, 99084, 84},
    {90016, 99085, 85},
    {90013, 99122, 122},
    {90013, 99123, 123},
    {90013, 99124, 124},
    {90014, 99125, 125},
    {90014, 99126, 126},
    {90014, 99127, 127},
    {90015, 99128, 128},
    {90015, 99129, 129},
    {90015, 99130, 130},
    {90016, 99131, 131},
    {90016, 99132, 132},
    {90016, 99133, 133}
  };
}

std::vector<std::pair<uint32_t, uint32_t>> PetRegistry::BuildHatchTable(uint32_t eggTid)
{
  std::vector<std::pair<uint32_t, uint32_t>> hatchTable;

  for (const auto& pet : _pets)
  {
    if (pet.eggTid == eggTid){
      hatchTable.emplace_back(pet.petTid, pet.petId);
    }
  }

  return hatchTable;
}

};
