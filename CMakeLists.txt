cmake_minimum_required(VERSION 3.20)

project(alicia-server
        VERSION 1.0.0)

option(BUILD_TESTS "Build tests" ON)

find_package(Boost REQUIRED)

add_subdirectory(3rd-party SYSTEM)

# Project properties interface library
add_library(project-properties INTERFACE)
target_compile_features(project-properties
        INTERFACE cxx_std_20)

# Alicia server library
add_library(alicia-libserver STATIC
        src/libserver/Alicia.cpp
        src/libserver/Util.cpp
        src/server/Settings.cpp
        src/libserver/base/Server.cpp
        src/libserver/command/CommandProtocol.cpp
        src/libserver/command/CommandServer.cpp
        src/libserver/command/proto/LobbyMessageDefines.cpp
        src/libserver/command/proto/RanchMessageDefines.cpp
        include/libserver/command/proto/DataDefines.hpp)
target_include_directories(alicia-libserver
        PUBLIC include/)
target_link_libraries(alicia-libserver
        PUBLIC project-properties Boost::headers spdlog::spdlog nlohmann_json::nlohmann_json pqxx)

# Alicia server executable
add_executable(alicia-server)

# Version variables
set(AliciaServerBuildName alpha)
set(AliciaServerBuildVersionMajor ${CMAKE_PROJECT_VERSION_MAJOR})
set(AliciaServerBuildVersionMinor ${CMAKE_PROJECT_VERSION_MINOR})
set(AliciaServerBuildVersion ${CMAKE_PROJECT_VERSION}-${AliciaServerBuildName})

# Generated version header.
configure_file(
        include/server/Version.hpp.in
        generated/Version.hpp)

target_sources(alicia-server PRIVATE
        src/server/main.cpp
        src/server/lobby/LobbyDirector.cpp
        src/server/ranch/RanchDirector.cpp)
target_link_libraries(alicia-server
        PRIVATE project-properties alicia-libserver)

target_include_directories(alicia-server PUBLIC
        "${PROJECT_BINARY_DIR}/generated")

if (${MSVC})
        target_compile_options(alicia-server
                PRIVATE /utf-8)
endif ()

if (BUILD_TESTS) 
        enable_testing()
        add_subdirectory(tests)
endif()

if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    message(STATUS "Adding -fexperimental-library for Clang compiler")
    target_compile_options(alicia-libserver
        PRIVATE -fexperimental-library)
    target_compile_options(alicia-server
        PRIVATE -fexperimental-library)
endif()

add_custom_command(
        TARGET alicia-server POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_directory
                ${CMAKE_SOURCE_DIR}/resources
                ${CMAKE_CURRENT_BINARY_DIR}/resources)